<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.justincranford</groupId>
	<artifactId>pkcs11</artifactId>
	<version>0.0.1-pkcs11</version>
	<name>pkcs11</name>
	<description>Demonstrate SunPKCS11 on Windows with SoftHSM2 for AES and HMAC.</description>
	<url>https://github.com/justincranford/pkcs11</url>

	<scm>
		<connection>scm:https://github.com/justincranford/pkcs11.git</connection>
		<developerConnection>scm:https://github.com/justincranford/pkcs11.git</developerConnection>
		<url>scm:https://github.com/justincranford/pkcs11</url>
	</scm>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Justin Cranford</name>
			<email>justincranford@hotmail.com</email>
			<organization>Justin Cranford</organization>
			<organizationUrl>https://github.com/justincranford</organizationUrl>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.test.skip>false</maven.test.skip>
		<maven.install.skip>true</maven.install.skip>
		<dependency-check.skip>true</dependency-check.skip>
		<jacoco.unit.test.skip>false</jacoco.unit.test.skip>
		<jacoco.integration.test.skip>false</jacoco.integration.test.skip>
		<build.profile.id>jacoco-all</build.profile.id>
	</properties>

	<profiles>
		<profile>
			<id>jacoco-none</id>
			<properties>
				<build.profile.id>jacoco-none</build.profile.id>
				<jacoco.unit.test.skip>false</jacoco.unit.test.skip>
				<jacoco.integration.test.skip>false</jacoco.integration.test.skip>
			</properties>
		</profile>
		<profile>
			<id>jacoco-ut</id>
			<properties>
				<build.profile.id>jacoco-ut</build.profile.id>
				<jacoco.unit.test.skip>false</jacoco.unit.test.skip>
				<jacoco.integration.test.skip>true</jacoco.integration.test.skip>
			</properties>
		</profile>
		<profile>
			<id>jacoco-it</id>
			<properties>
				<build.profile.id>jacoco-it</build.profile.id>
				<jacoco.unit.test.skip>true</jacoco.unit.test.skip>
				<jacoco.integration.test.skip>false</jacoco.integration.test.skip>
			</properties>
		</profile>
		<profile>
			<id>jacoco-all</id>
			<properties>
				<build.profile.id>jacoco-all</build.profile.id>
				<jacoco.unit.test.skip>false</jacoco.unit.test.skip>
				<jacoco.integration.test.skip>false</jacoco.integration.test.skip>
			</properties>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.1.4</version>
				<configuration>
					<fork>false</fork>
					<effort>max</effort>
					<failOnError>false</failOnError>
					<includeTests>false</includeTests>
					<plugins>
						<!-- https://mvnrepository.com/artifact/com.h3xstream.findsecbugs/findsecbugs-plugin -->
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>1.10.1</version>
						</plugin>
						<!-- https://mvnrepository.com/artifact/com.mebigfatguy.sb-contrib/sb-contrib -->
						<plugin>
							<groupId>com.mebigfatguy.sb-contrib</groupId>
							<artifactId>sb-contrib</artifactId>
							<version>7.4.7</version>
						</plugin>
						<!-- https://mvnrepository.com/artifact/jp.skypencil.findbugs.slf4j/bug-pattern -->
						<plugin>
							<groupId>jp.skypencil.findbugs.slf4j</groupId>
							<artifactId>bug-pattern</artifactId>
							<version>1.5.0</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-annotations -->
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>4.1.4</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
		 	<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>check-for-new-versions</id>
						<phase>validate</phase>
						<goals>
							<goal>dependency-updates-report</goal>
							<goal>plugin-updates-report</goal>
							<goal>property-updates-report</goal>
						</goals>
						<configuration>
							<!-- Maven Versioning: https://cwiki.apache.org/confluence/display/MAVENOLD/Versioning -->
							<!-- <MajorVersion [> . <MinorVersion [> . <IncrementalVersion ] ] [> - <BuildNumber | Qualifier ]> ]> -->
							<allowAnyUpdates>true</allowAnyUpdates>
							<allowMajorUpdates>true</allowMajorUpdates>
							<allowMinorUpdates>true</allowMinorUpdates>
							<allowIncrementalUpdates>true</allowIncrementalUpdates>
							<allowSnapshots>false</allowSnapshots>
							<verbose>false</verbose>
							<outputDirectory>${project.reporting.outputDirectory}/sast-dependency-versions</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-project-info-reports-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
			<!--  https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
							<goal>test-jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-test-classes</id>
						<phase>package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
							<goal>javadoc-no-fork</goal>
							<goal>test-javadoc-no-fork</goal>
						</goals>
						<configuration>
							<reportOutputDirectory>${project.reporting.outputDirectory}/javadocs</reportOutputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/sast-test-coverage/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/sast-test-coverage/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/sast-test-coverage/unit-tests</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/sast-test-coverage/jacoco-it.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/sast-test-coverage/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/sast-test-coverage/integration-tests</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/sast-test-coverage/</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/sast-test-coverage/jacoco-merged.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>create-merged-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the merged execution data. -->
							<dataFile>${project.build.directory}/sast-test-coverage/jacoco-merged.exec</dataFile>
							<!-- Sets the output directory for the merged code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/sast-test-coverage/merged-tests</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<!--
					<parallel>classes</parallel>
					<threadCount>2</threadCount>
					-->
					<!-- Disable Maven temp jar MANIFEST for classloading to fix some resource load failures. -->
					<useSystemClassLoader>false</useSystemClassLoader>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of jacoco.unit.test.skip property is true -->
					<skipTests>${jacoco.unit.test.skip}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!--
							<parallel>classes</parallel>
							<threadCount>2</threadCount>
							-->
							<!-- Disable Maven temp jar MANIFEST for classloading to fix some resource load failures. -->
							<useSystemClassLoader>false</useSystemClassLoader>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of jacoco.integration.test.skip property is true -->
							<skipTests>${jacoco.integration.test.skip}</skipTests>
							<testFailureIgnore>true</testFailureIgnore>
						</configuration>
					</execution>
				</executions>
	   		</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
				<executions>
					<execution>
						<id>generate-site-jar</id>
						<phase>verify</phase>
						<goals>
							<goal>site</goal>
							<goal>jar</goal>
						</goals>
						<configuration>
							<generateSitemap>true</generateSitemap>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>